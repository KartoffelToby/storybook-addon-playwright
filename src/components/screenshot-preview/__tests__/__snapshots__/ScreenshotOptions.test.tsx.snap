// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScreenshotOptions should have defaults 1`] = `
<div
  className="makeStyles-root-8"
>
  <div
    className="makeStyles-title-9"
  >
    Screenshot Options
  </div>
  <WithStyles(ForwardRef(Divider)) />
  <div
    className="makeStyles-content-2"
  >
    <div
      className="makeStyles-labelWrapper-7"
    >
      <label
        className="makeStyles-label-6"
      >
        Screenshot Clip:
        <WithStyles(ForwardRef(Tooltip))
          title="An object which specifies clipping of the resulting image."
        >
          <HelpOutlineSharpIcon
            className="makeStyles-helpIcon-5"
          />
        </WithStyles(ForwardRef(Tooltip))>
      </label>
      <WithStyles(ForwardRef(IconButton))
        onClick={[Function]}
        size="small"
      >
        <RestoreIcon
          style={
            Object {
              "height": 18,
              "width": 18,
            }
          }
        />
      </WithStyles(ForwardRef(IconButton))>
    </div>
    <form
      autoComplete="off"
      className="makeStyles-form-4"
      noValidate={true}
    >
      <WithStyles(ForwardRef(TextField))
        InputLabelProps={
          Object {
            "shrink": true,
          }
        }
        inputProps={
          Object {
            "min": "1",
          }
        }
        label="Width"
        name="width"
        onBlur={[Function]}
        onChange={[Function]}
        required={true}
        size="small"
        type="number"
        value={2}
        variant="outlined"
      />
      <WithStyles(ForwardRef(TextField))
        InputLabelProps={
          Object {
            "shrink": true,
          }
        }
        inputProps={
          Object {
            "min": "1",
          }
        }
        label="Height"
        name="height"
        onBlur={[Function]}
        onChange={[Function]}
        required={true}
        size="small"
        type="number"
        value={1}
        variant="outlined"
      />
      <WithStyles(ForwardRef(TextField))
        InputLabelProps={
          Object {
            "shrink": true,
          }
        }
        inputProps={
          Object {
            "min": "0",
          }
        }
        label="X"
        name="x"
        onChange={[Function]}
        required={true}
        size="small"
        type="number"
        value={3}
        variant="outlined"
      />
      <WithStyles(ForwardRef(TextField))
        InputLabelProps={
          Object {
            "shrink": true,
          }
        }
        inputProps={
          Object {
            "min": "0",
          }
        }
        label="Y"
        name="y"
        onChange={[Function]}
        required={true}
        size="small"
        type="number"
        value={4}
        variant="outlined"
      />
    </form>
    <br />
    <label>
      Other Options:
    </label>
    <form
      autoComplete="off"
      className="makeStyles-form-4"
      noValidate={true}
    >
      <WithStyles(ForwardRef(TextField))
        InputLabelProps={
          Object {
            "shrink": true,
          }
        }
        defaultValue="png"
        label="Type"
        name="type"
        onChange={[Function]}
        select={true}
        size="small"
        type="number"
        value="jpeg"
        variant="outlined"
      >
        <WithStyles(ForwardRef(MenuItem))
          key="png"
          value="png"
        >
          png
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          key="jpeg"
          value="jpeg"
        >
          jpeg
        </WithStyles(ForwardRef(MenuItem))>
      </WithStyles(ForwardRef(TextField))>
      <WithStyles(ForwardRef(TextField))
        InputLabelProps={
          Object {
            "shrink": true,
          }
        }
        inputProps={
          Object {
            "max": "100",
            "min": "-1",
          }
        }
        label="Quality"
        name="quality"
        onChange={[Function]}
        size="small"
        type="number"
        value={1}
        variant="outlined"
      />
    </form>
    <form
      autoComplete="off"
      className="makeStyles-form-4"
      noValidate={true}
    >
      <WithStyles(ForwardRef(FormControlLabel))
        control={
          <WithStyles(ForwardRef(Checkbox))
            checked={true}
            color="primary"
            name="fullPage"
            onChange={[Function]}
          />
        }
        label={
          <div
            className="makeStyles-controlLabel-3"
          >
            Full Page
            <WithStyles(ForwardRef(Tooltip))
              title="When true, takes a screenshot of the full scrollable page, instead of the currently visibvle viewport. Defaults to \`false\`."
            >
              <Memo(HelpOutlineSharpIcon)
                className="makeStyles-helpIcon-5"
              />
            </WithStyles(ForwardRef(Tooltip))>
          </div>
        }
      />
      <WithStyles(ForwardRef(FormControlLabel))
        control={
          <WithStyles(ForwardRef(Checkbox))
            checked={true}
            color="primary"
            name="omitBackground"
            onChange={[Function]}
          />
        }
        label={
          <div
            className="makeStyles-controlLabel-3"
          >
            Omit Background
            <WithStyles(ForwardRef(Tooltip))
              title="Hides default white background and allows capturing screenshots with transparency. Not applicable to \`jpeg\` images. Defaults to \`false\`."
            >
              <Memo(HelpOutlineSharpIcon)
                className="makeStyles-helpIcon-5"
              />
            </WithStyles(ForwardRef(Tooltip))>
          </div>
        }
      />
    </form>
  </div>
  <WithStyles(ForwardRef(Divider)) />
  <div
    className="makeStyles-actions-1"
  >
    <div />
    <WithStyles(ForwardRef(Button))
      onClick={[Function]}
    >
      Clear
    </WithStyles(ForwardRef(Button))>
  </div>
</div>
`;
